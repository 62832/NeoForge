--- a/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/net/minecraft/server/dedicated/DedicatedServer.java
@@ -68,6 +68,8 @@
    private MinecraftServerGui gui;
    @Nullable
    private final TextFilterClient textFilterClient;
+   @Nullable
+   private net.minecraft.client.server.LanServerPinger dediLanPinger;
 
    public DedicatedServer(
       Thread p_214789_,
@@ -90,6 +92,7 @@
       Thread thread = new Thread("Server console handler") {
          @Override
          public void run() {
+            if (net.minecraftforge.server.console.TerminalHandler.handleCommands(DedicatedServer.this)) return;
             BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));
 
             String s1;
@@ -168,11 +171,13 @@
          long i = Util.getNanos();
          SkullBlockEntity.setup(this.services, this);
          GameProfileCache.setUsesAuthentication(this.usesAuthentication());
+         if (!net.minecraftforge.server.ServerLifecycleHooks.handleServerAboutToStart(this)) return false;
          LOGGER.info("Preparing level \"{}\"", this.getLevelIdName());
          this.loadLevel();
          long j = Util.getNanos() - i;
          String s = String.format(Locale.ROOT, "%.3fs", (double)j / 1.0E9);
          LOGGER.info("Done ({})! For help, type \"help\"", s);
+         this.nextTickTime = Util.getMillis(); //Forge: Update server time to prevent watchdog/spaming during long load.
          if (dedicatedserverproperties.announcePlayerAchievements != null) {
             this.getGameRules().getRule(GameRules.RULE_ANNOUNCE_ADVANCEMENTS).set(dedicatedserverproperties.announcePlayerAchievements, this);
          }
@@ -200,7 +205,12 @@
             LOGGER.info("JMX monitoring enabled");
          }
 
-         return true;
+         if (net.minecraftforge.common.ForgeConfig.SERVER.advertiseDedicatedServerToLan.get()) {
+            this.dediLanPinger = new net.minecraft.client.server.LanServerPinger(this.getMotd(), String.valueOf(this.getServerPort()));
+            this.dediLanPinger.start();
+         }
+
+         return net.minecraftforge.server.ServerLifecycleHooks.handleServerStarting(this);
       }
    }
 
@@ -278,6 +288,10 @@
       if (this.queryThreadGs4 != null) {
          this.queryThreadGs4.stop();
       }
+      if (this.dediLanPinger != null) {
+         this.dediLanPinger.interrupt();
+         this.dediLanPinger = null;
+      }
    }
 
    @Override
@@ -531,7 +545,12 @@
 
    @Override
    public void stopServer() {
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.GameShuttingDownEvent());
       super.stopServer();
+      if (this.dediLanPinger != null) {
+         this.dediLanPinger.interrupt();
+         this.dediLanPinger = null;
+      }
       Util.shutdownExecutors();
       SkullBlockEntity.clear();
    }
